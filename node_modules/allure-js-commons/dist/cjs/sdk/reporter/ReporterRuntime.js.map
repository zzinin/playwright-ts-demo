{"version":3,"file":"ReporterRuntime.js","names":["_nodePath","_interopRequireDefault","require","_path","_model","_LifecycleState","_Notifier","_factory","_testplan","_utils","_attachments","_loader","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classPrivateMethodInitSpec","a","_checkPrivateRedeclaration","add","_classPrivateFieldInitSpec","set","has","TypeError","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","String","Number","_classPrivateGetter","s","_assertClassBrand","_classPrivateFieldGet","get","n","_runningSteps","WeakMap","_ShallowStepsStack_brand","WeakSet","ShallowStepsStack","constructor","currentStep","_get_currentStep","startStep","step","stepResult","createStepResult","steps","updateStep","updateFunc","console","error","stopStep","opts","stop","duration","result","start","undefined","pop","findStepByUuid","uuid","findRecursively","found","addAttachment","attachment","writer","isPath","path","fileExt","extname","fileName","buildAttachmentFileName","contentType","fileExtension","writeAttachmentFromPath","body","writeAttachment","exports","_this","DefaultStepStack","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","delete","stepUuid","removeStep","newValue","_handleMetadataMessage","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","_calculateTimings","ReporterRuntime","_ref","_this2","listeners","environmentInfo","categories","links","globalLabels","LifecycleState","randomUuid","state","setScope","scope","getScope","concat","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","createFixtureResult","Date","now","fixtures","fixture","getFixtureResult","startStop","stage","Stage","FINISHED","scopeUuids","testResult","createTestResult","deepClone","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","wrapped","getWrappedTestResult","beforeTestResultStop","labels","parameters","description","_testResult$descripti","descriptionHtml","_testResult$descripti2","testCaseId","getTestResultTestCaseId","historyId","getTestResultHistoryId","afterTestResultStop","hasSkipLabel","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","parentStepUuid","parent","JSON","stringify","setStepResult","addStep","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","attachmentFileName","name","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","getWrappedFixtureResult","displayName","updateFixture","updateScope","linkConfig","formatLinks","updateTest","status","statusDetails","Buffer","from","content","encoding","root","getExecutionItem","_ref2","writtenFixtures","Set","deleteFixtureResult","befores","afters","writeGroup","children","normalisedDuration","Math","max","round","resolveWriter","Notifier","Array","isArray","entries","flatMap","_ref3","v"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport path from \"node:path\";\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  type Label,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport { hasSkipLabel } from \"./testplan.js\";\nimport type {\n  FixtureResultWrapper,\n  FixtureType,\n  LinkConfig,\n  ReporterRuntimeConfig,\n  TestScope,\n  Writer,\n} from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\nexport interface StepStack {\n  clear(): void;\n\n  removeRoot(rootUuid: string): void;\n\n  currentStep(rootUuid: string): string | undefined;\n\n  addStep(rootUuid: string, stepUuid: string): void;\n\n  removeStep(stepUuid: string): void;\n}\n\n/**\n * Simpler steps stack implementation that contains only the current steps without root nodes\n * Useful, when you need to create steps without binding them to a specific test or fixture\n * @example\n * ```js\n * const stack = new ShallowStepsStack();\n *\n * stack.startStep({ name: \"step 1\" });\n * stack.startStep({ name: \"step 1.1\" });\n * stack.stopStep({ status: Status.FAILED });\n * stack.stopStep({ status: Status.PASSED });\n * stack.steps // => [{ name: \"step 1\", status: Status.PASSED, steps: [{ name: \"step 1.1\", status: Status.FAILED }] }]\n * ```\n */\nexport class ShallowStepsStack {\n  steps: StepResult[] = [];\n\n  #runningSteps: StepResult[] = [];\n\n  get #currentStep() {\n    return this.#runningSteps[this.#runningSteps.length - 1];\n  }\n\n  currentStep() {\n    return this.#currentStep;\n  }\n\n  startStep(step: Partial<StepResult>) {\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      ...step,\n    };\n\n    if (this.#currentStep) {\n      this.#currentStep.steps.push(stepResult);\n    } else {\n      this.steps.push(stepResult);\n    }\n\n    this.#runningSteps.push(stepResult);\n  }\n\n  updateStep(updateFunc: (result: StepResult) => void) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to update!\");\n      return;\n    }\n\n    updateFunc(this.#currentStep);\n  }\n\n  stopStep(opts?: { stop?: number; duration?: number }) {\n    if (!this.#currentStep) {\n      // eslint-disable-next-line no-console\n      console.error(\"There is no running step in the stack to stop!\");\n      return;\n    }\n\n    const { stop, duration = 0 } = opts ?? {};\n\n    this.updateStep((result) => {\n      result.stop = stop ?? result.start ? result.start! + duration : undefined;\n    });\n\n    this.#runningSteps.pop();\n  }\n\n  findStepByUuid(uuid: string): StepResult | undefined {\n    const findRecursively = (steps: StepResult[]): StepResult | undefined => {\n      for (const s of steps) {\n        if (s.uuid === uuid) {\n          return s;\n        }\n        const found = findRecursively(s.steps);\n        if (found) {\n          return found;\n        }\n      }\n      return undefined;\n    };\n    return findRecursively(this.steps);\n  }\n\n  addAttachment(attachment: AttachmentOptions, writer: Writer) {\n    const isPath = !!attachment.path;\n    const fileExt = attachment.path ? path.extname(attachment.path) : undefined;\n    const fileName = buildAttachmentFileName({\n      contentType: attachment.contentType,\n      fileExtension: fileExt,\n    });\n    if (isPath) {\n      writer.writeAttachmentFromPath(fileName, attachment.path as string);\n    } else if (attachment.body) {\n      writer.writeAttachment(fileName, attachment.body);\n    }\n    return fileName;\n  }\n}\n\nexport class DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n  globalLabels: Label[] = [];\n\n  constructor({\n    writer,\n    listeners = [],\n    environmentInfo,\n    categories,\n    links,\n    globalLabels = {},\n  }: ReporterRuntimeConfig) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n\n    if (Array.isArray(globalLabels)) {\n      this.globalLabels = globalLabels;\n    } else if (Object.keys(globalLabels).length) {\n      this.globalLabels = Object.entries(globalLabels).flatMap(([name, value]) => {\n        if (Array.isArray(value)) {\n          return value.map((v) => ({ name, value: v }));\n        }\n\n        return {\n          name,\n          value,\n        };\n      });\n    }\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(scopeUuid, uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, opts?: { stop?: number; duration?: number }): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    const startStop = this.#calculateTimings(fixture.start, opts?.stop, opts?.duration);\n    fixture.start = startStop.start;\n    fixture.stop = startStop.stop;\n\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult, scopeUuids);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const wrapped = this.state.getWrappedTestResult(uuid);\n    if (!wrapped) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    const testResult = wrapped.value;\n\n    this.notifier.beforeTestResultStop(testResult);\n\n    const scopeUuids = wrapped.scopeUuids;\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n\n      if (scope?.labels) {\n        testResult.labels = [...testResult.labels, ...scope.labels];\n      }\n\n      if (scope?.links) {\n        testResult.links = [...testResult.links, ...scope.links];\n      }\n\n      if (scope?.parameters) {\n        testResult.parameters = [...testResult.parameters, ...scope.parameters];\n      }\n\n      if (scope?.description) {\n        testResult.description = testResult.description ?? scope.description;\n      }\n\n      if (scope?.descriptionHtml) {\n        testResult.descriptionHtml = testResult.descriptionHtml ?? scope.descriptionHtml;\n      }\n    });\n\n    testResult.labels = [...this.globalLabels, ...testResult.labels];\n\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n\n    const startStop = this.#calculateTimings(testResult.start, opts?.stop, opts?.duration);\n\n    testResult.start = startStop.start;\n    testResult.stop = startStop.stop;\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (hasSkipLabel(testResult.labels)) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, opts?: { stop?: number; duration?: number }) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    const startStop = this.#calculateTimings(step.start, opts?.stop, opts?.duration);\n    step.start = startStop.start;\n    step.stop = startStop.stop;\n\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getWrappedFixtureResult(rootUuid);\n    const { links, labels, parameters, displayName, testCaseId, historyId, description, descriptionHtml } = message;\n\n    if (fixtureResult) {\n      if (displayName) {\n        this.updateFixture(rootUuid, (result) => {\n          result.name = displayName;\n        });\n      }\n\n      if (historyId) {\n        // eslint-disable-next-line no-console\n        console.error(\"historyId can't be changed within test fixtures\");\n      }\n      if (testCaseId) {\n        // eslint-disable-next-line no-console\n        console.error(\"testCaseId can't be changed within test fixtures\");\n      }\n\n      if (links || labels || parameters || description || descriptionHtml) {\n        // in some frameworks, afterEach methods can be executed before test stop event, while\n        // in others after. To remove the possible undetermined behaviour we only allow\n        // using runtime metadata API in before hooks.\n        if (fixtureResult.type === \"after\") {\n          // eslint-disable-next-line no-console\n          console.error(\"metadata messages isn't supported for after test fixtures\");\n          return;\n        }\n\n        this.updateScope(fixtureResult.scopeUuid, (scope) => {\n          if (links) {\n            scope.links = [...scope.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n          }\n          if (labels) {\n            scope.labels = [...scope.labels, ...labels];\n          }\n          if (parameters) {\n            scope.parameters = [...scope.parameters, ...parameters];\n          }\n          if (description) {\n            scope.description = description;\n          }\n          if (descriptionHtml) {\n            scope.descriptionHtml = descriptionHtml;\n          }\n        });\n      }\n\n      return;\n    }\n\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      if (testCaseId) {\n        result.testCaseId = testCaseId;\n      }\n      if (historyId) {\n        result.historyId = historyId;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (descriptionHtml) {\n        result.descriptionHtml = descriptionHtml;\n      }\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, { stop: message.stop });\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureResultWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n\n  #calculateTimings = (\n    start?: number,\n    stop?: number,\n    duration?: number,\n  ): {\n    start?: number;\n    stop?: number;\n  } => {\n    const result: { start?: number; stop?: number } = { start, stop };\n    if (duration) {\n      const normalisedDuration = Math.max(0, duration);\n      if (result.stop !== undefined) {\n        result.start = result.stop - normalisedDuration;\n      } else if (result.start !== undefined) {\n        result.stop = result.start + normalisedDuration;\n      } else {\n        result.stop = Date.now();\n        result.start = result.stop - normalisedDuration;\n      }\n    } else {\n      if (result.stop === undefined) {\n        result.stop = Date.now();\n      }\n      if (result.start === undefined) {\n        result.start = result.stop;\n      }\n    }\n    return {\n      start: result.start ? Math.round(result.start) : undefined,\n      stop: result.stop ? Math.round(result.stop) : undefined,\n    };\n  };\n}\n"],"mappings":"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","ignoreList":[]}