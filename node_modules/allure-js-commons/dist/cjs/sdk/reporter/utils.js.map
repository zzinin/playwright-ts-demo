{"version":3,"file":"utils.js","names":["_nodeCrypto","require","_nodeFs","_interopRequireDefault","_promises","_nodePath","_nodeProcess","_model","_FileSystemWriter","_MessageWriter","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","asyncGeneratorStep","n","a","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","randomUuid","randomUUID","exports","md5","str","createHash","update","digest","getTestResultHistoryId","result","_result$testCaseId","historyId","tcId","testCaseId","fullName","paramsString","parameters","p","excluded","sort","b","_a$name","_a$value","name","localeCompare","map","_p$name","_p$value","concat","join","paramsHash","getTestResultTestCaseId","undefined","statusToPriority","status","StatusByPriority","indexOf","getWorstTestStepResult","steps","readImageAsBase64","_ref","filePath","file","readFile","encoding","console","error","_x","getProjectRoot","cachedProjectRoot","resolveProjectRootByPath","cwd","process","nextDir","dir","fs","accessSync","path","constants","F_OK","_unused","dirname","getRelativePath","filepath","isAbsolute","projectRoot","relative","getPosixPath","platform","replaceAll","deepClone","obj","JSON","parse","stringify","getSuiteLabels","suites","parentSuite","suite","subSuites","labels","LabelName","PARENT_SUITE","SUITE","SUB_SUITE","suiteLabelNames","ensureSuiteLabels","test","defaultSuites","_test$labels","find","l","includes","_test$labels2","_test$labels3","Boolean","reRegExpChar","reHasRegExpChar","RegExp","source","escapeRegExp","replace","isUrl","potentialUrl","URL","applyLinkTemplate","template","formatLink","templates","link","url","originalUrl","type","_templates","formattedLink","urlTemplate","nameTemplate","LinkType","DEFAULT","formatLinks","links","createDefaultWriter","config","env","ALLURE_TEST_MODE","MessageWriter","emitter","FileSystemWriter","resultsDir"],"sources":["../../../../src/sdk/reporter/utils.ts"],"sourcesContent":["import { createHash, randomUUID } from \"node:crypto\";\nimport type { EventEmitter } from \"node:events\";\nimport fs from \"node:fs\";\nimport { readFile } from \"node:fs/promises\";\nimport path from \"node:path\";\nimport process from \"node:process\";\nimport type { Label, Link, Status, StepResult, TestResult } from \"../../model.js\";\nimport { LabelName, LinkType, StatusByPriority } from \"../../model.js\";\nimport type { LinkConfig, LinkTemplate } from \"./types.js\";\nimport { FileSystemWriter } from \"./writer/FileSystemWriter.js\";\nimport { MessageWriter } from \"./writer/MessageWriter.js\";\n\nexport const randomUuid = () => {\n  return randomUUID();\n};\n\nexport const md5 = (str: string) => {\n  return createHash(\"md5\").update(str).digest(\"hex\");\n};\n\nexport const getTestResultHistoryId = (result: TestResult) => {\n  if (result.historyId) {\n    return result.historyId;\n  }\n\n  const tcId = result.testCaseId ?? (result.fullName ? md5(result.fullName) : null);\n\n  if (!tcId) {\n    return \"\";\n  }\n\n  const paramsString = result.parameters\n    .filter((p) => !p?.excluded)\n    .sort((a, b) => a.name?.localeCompare(b?.name) || a.value?.localeCompare(b?.value))\n    .map((p) => `${p.name ?? \"null\"}:${p.value ?? \"null\"}`)\n    .join(\",\");\n  const paramsHash = md5(paramsString);\n\n  return `${tcId}:${paramsHash}`;\n};\n\nexport const getTestResultTestCaseId = (result: TestResult) => {\n  return result.fullName ? md5(result.fullName) : undefined;\n};\n\nconst statusToPriority = (status: Status | undefined) => {\n  if (!status) {\n    return -1;\n  }\n  return StatusByPriority.indexOf(status);\n};\n\nexport const getWorstTestStepResult = (steps: StepResult[]): StepResult | undefined => {\n  if (steps.length === 0) {\n    return;\n  }\n\n  return [...steps].sort((a, b) => statusToPriority(a.status) - statusToPriority(b.status))[0];\n};\n\nexport const readImageAsBase64 = async (filePath: string): Promise<string | undefined> => {\n  try {\n    const file = await readFile(filePath, { encoding: \"base64\" });\n\n    return file ? `data:image/png;base64,${file}` : undefined;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(`could not read file ${filePath}`, e);\n    return undefined;\n  }\n};\n\nexport const getProjectRoot = (() => {\n  let cachedProjectRoot: string | null = null;\n\n  const resolveProjectRootByPath = () => {\n    const cwd = process.cwd();\n    let nextDir = cwd;\n    let dir;\n\n    do {\n      dir = nextDir;\n      try {\n        fs.accessSync(path.join(dir, \"package.json\"), fs.constants.F_OK);\n\n        // package.json exists; use the directory as the project root\n        return dir;\n      } catch {}\n\n      nextDir = path.dirname(dir);\n    } while (nextDir.length < dir.length);\n\n    // package.json doesn't exist in any parent; fall back to CWD\n    return cwd;\n  };\n\n  return () => {\n    if (!cachedProjectRoot) {\n      cachedProjectRoot = resolveProjectRootByPath();\n    }\n    return cachedProjectRoot;\n  };\n})();\n\nexport const getRelativePath = (filepath: string) => {\n  if (path.isAbsolute(filepath)) {\n    const projectRoot = getProjectRoot();\n    filepath = path.relative(projectRoot, filepath);\n  }\n  return filepath;\n};\n\nexport const getPosixPath = (filepath: string) => {\n  if (process.platform === \"win32\") {\n    return filepath.replaceAll(\"\\\\\", \"/\");\n  }\n  return filepath;\n};\n\nexport const deepClone = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\nexport const getSuiteLabels = (suites: readonly string[]): Label[] => {\n  if (suites.length === 0) {\n    return [];\n  }\n\n  const [parentSuite, suite, ...subSuites] = suites;\n  const labels: Label[] = [];\n\n  if (parentSuite) {\n    labels.push({\n      name: LabelName.PARENT_SUITE,\n      value: parentSuite,\n    });\n  }\n\n  if (suite) {\n    labels.push({\n      name: LabelName.SUITE,\n      value: suite,\n    });\n  }\n\n  if (subSuites.length > 0) {\n    labels.push({\n      name: LabelName.SUB_SUITE,\n      value: subSuites.join(\" > \"),\n    });\n  }\n\n  return labels;\n};\n\nconst suiteLabelNames: readonly string[] = [LabelName.PARENT_SUITE, LabelName.SUITE, LabelName.SUB_SUITE];\n\n/**\n * Resolves suite labels for the given test results and add default lables if there is no any suite label.\n * @example\n * ```ts\n * ensureSuiteLabels({ labels: [{ name: \"suite\", value: \"foo\" }] }, [\"bar\"]) // => [{ name: \"suite\", value: \"foo\" }]\n * ensureSuiteLabels({ labels: [] }, [\"bar\"]) // => [{ name: \"parentSuite\", value: \"bar\" }]\n * ```\n * @param test - Test result to resolve suite labels for\n * @param defaultSuites - Default suites to add if there is no any suite label\n * @returns Actual suite labels\n */\nexport const ensureSuiteLabels = (test: Partial<TestResult>, defaultSuites: readonly string[]) => {\n  if (!test.labels?.find((l) => suiteLabelNames.includes(l.name))) {\n    test.labels = [...(test.labels ?? []), ...getSuiteLabels(defaultSuites)];\n  }\n\n  return suiteLabelNames.map((name) => test.labels?.find((l) => l.name === name)).filter(Boolean) as Label[];\n};\n\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n  reHasRegExpChar = RegExp(reRegExpChar.source);\n\nexport const escapeRegExp = (value: string): string => {\n  return reHasRegExpChar.test(value) ? value.replace(reRegExpChar, \"\\\\$&\") : value;\n};\n\n// TODO: may also use URL.canParse instead (requires node.js v18.17, v19.9, or higher)\nconst isUrl = (potentialUrl: string) => {\n  // Short-circuits the check for many short URL cases, bypassing the try-catch logic.\n  if (potentialUrl.indexOf(\":\") === -1) {\n    return false;\n  }\n\n  // There is ':' in the string: a potential scheme separator.\n  // The string might be a proper URL already.\n  try {\n    new URL(potentialUrl);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const applyLinkTemplate = (template: LinkTemplate, value: string) =>\n  typeof template === \"string\" ? template.replace(\"%s\", value) : template(value);\n\nexport const formatLink = (templates: LinkConfig, link: Link) => {\n  const { url: originalUrl, name, type } = link;\n  if (isUrl(originalUrl)) {\n    return link;\n  } else {\n    const formattedLink = { ...link };\n    const { urlTemplate, nameTemplate } = templates[type ?? LinkType.DEFAULT] ?? {};\n    if (urlTemplate !== undefined) {\n      formattedLink.url = applyLinkTemplate(urlTemplate, originalUrl);\n    }\n    if (name === undefined && nameTemplate !== undefined) {\n      formattedLink.name = applyLinkTemplate(nameTemplate, originalUrl);\n    }\n    return formattedLink;\n  }\n};\n\nexport const formatLinks = (templates: LinkConfig, links: readonly Link[]) =>\n  links.map((link) => formatLink(templates, link));\n\nexport const createDefaultWriter = (config: { resultsDir?: string; emitter?: EventEmitter }) => {\n  return process.env.ALLURE_TEST_MODE\n    ? new MessageWriter(config.emitter)\n    : new FileSystemWriter({\n        resultsDir: config.resultsDir || \"./allure-results\",\n      });\n};\n"],"mappings":"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","ignoreList":[]}